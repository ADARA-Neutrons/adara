;
; Sample SMS Daemon Config File
;

[sms]
	; Let SMS know where to find everything
	;
	basedir = /SNSlocal/sms

	; Experimental Facility:
	; facility = SNS
	; facility = HFIR
	;
	facility = SNS

	; SNS Facility Target Station Number
	;
	target_station = 1

	; Beam line identification
	;
	beamline_id = BL99Z
	beamline_longname = CHANGE
	beamline_shortname = ME

	; User/group to run as
	;
	user = snsdata
	group = adara

	; ParADARA SMS Instance ID
	; instance_id = 0 (Primary)
	; instance_id = 1+ (Secondary)
	instance_id = 0

	; ParADARA Alternate Primary SMS PV Prefix String
	; alt_primary_pv_prefix = (unset)
	alt_primary_pv_prefix = Foo:Bar

	; No-EoP Pulse Buffer Size
	; (for interleaved or out-of-order legacy pulse data... ;-)
	; no_eop_pulse_buffer_size = 0
	no_eop_pulse_buffer_size = 1

	; Max Internal Pulse Buffer Size (so we don't swell up and pop!)
	; max_pulse_buffer_size = 1000

	; No RTDL Pulses on This Beamline?
	; no_rtdl_pulses = false

	; Do Pulse Proton Charge Correction?
	; do_pulse_pcharge_correction = true

	; Do Pulse Veto Flags Correction?
	; do_pulse_veto_correction = true

	; Send Sample Meta-Data in Run Info?
	; send_sample_in_run_info = false

	; Allow Non-One-to-One Pixel Mappings... (e.g. for HFIR WAND/HB2C...)
	; allow_non_one_to_one_pixel_mappings = false

	; Use Original Pixel Mapping Packet... (*Only* for Backwards Compat!)
	; use_orig_pixel_mapping_pkt = false

	; Save Pixel Map in NeXus Data File?
	; save_pixel_map = false

	; Use Ancient Run Status Packet Format (Config File Only)
	; use_ancient_run_status_pkt = false

	; Automatically Reset Run Notes After Each Run Stop?
	; run_notes_auto_reset = true

	; Enable Multiple Run Notes Updates During the Run?
	; run_notes_updates_enabled = true

	; Systemic Threshold for Intermittent/Bursty Data Sources
	; (Could Eventually Be Customized on a Per Data Source Basis...?)
	; Note: Set to 0 to Deactivate Feature. ;-D
	; intermittent_data_threshold = 9

	; Set Number of Neutron Event State Bits in a Detector PixelId
	; (Any Non-Zero Value Activates Polarization State Processing!)
	; neutron_event_state_bits = 0

	; Set Whether or Not to Sort Neutron Events By State
	; (Else Simply Strip Off Any Neutron Event Detector PixelId State Bits)
	; neutron_event_sort_by_state = false

	; Set Whether Interleaved Global SAWTOOTH Pulses Should Be Ignored?
	; ignore_interleaved_sawtooth = true

	; Set Number of Beam Monitor TOF Bits
	; beam_monitor_tof_bits = 21

	; Set Number of Chopper TOF Bits
	; chopper_tof_bits = 21

	; Always Send Beam Monitor Config Packets?
	; always_send_bmon_config = true

	; Set SMS Verbose Value
	;      0 -> No Verbose Logging
	;   >= 1 -> Increasingly Verbose Logging Levels
	; verbose = 0

; One can have as many source sections as needed. SMS will pick them
; up as data sources if the section starts with 'source '
;
[source "preprocessor"]
	uri = 127.0.0.1:31416

	; Is this Data Source "Required" for Data Collection...?
	; (If set to "true", then the SMS will _Not_ Allow Runs to Start
	; if it is Missing, i.e. "Not Connected"...!)
	; required = false
	required = true

	; Max Network Socket Read Size...
	; readsize = 4M

	; How many seconds do we wait for our connection attempt to succeed?
	; We assume a fast, local network by default.
	;
	; connect_timeout = 5.0

	; After a failed connection attempt, how long do we wait to retry?
	;
	; connect_retry = 15.0

	; How many seconds do we wait for data before we decide the remote
	; end died?
	;
	; data_timeout = 3.0

	; How many times do we retry/wait before we really decide the remote
	; end died?
	;
	; data_timeout_retry = 3

	; Ignore the End-of-Pulse Flags being set by this source,
	; they are unreliable and erroneous... ;-b
	; ignore_eop = false

	; Ignore Local SAWTOOTH Pulse Times on this Data Source...
	; ignore_local_sawtooth = false

	; Ignore Annotation Packets on this Data Source...
	; ignore_annotation_pkts = Ignore

	; RTDL "No Data" Unregister Threshold
	; rtdl_no_data_thresh = 100

	; Save Input Stream for This Data Source?
	; save_input_stream = false

	; Are Data Packets "Mixed" with Neutron and Meta-Data Events...?
	; (Used for Auto-Deducing Which Pulses to Save/Count Proton Charge...)
	; mixed_data_packets = false

	; Check Packet Source Sequence Numbers?
	; (Increases Per Source Packet, No Reset)
	; check_source_sequence = true

	; Check Packet Pulse Sequence Numbers?
	; (Increases Per Event Packet, Resets Per Pulse)
	; check_pulse_sequence = true

	; Max Pulse Sequence List (Buffer) Size
	; max_pulse_seq_list = 32

[source "pvsd"]
	; The "Linux" Version for Slow Control/Meta-Data...
	; If the disabled key is present, the value doesn't matter
	; disabled = true
	uri = 127.0.0.1:9000

	; Is this Data Source "Required" for Data Collection...?
	; (If set to "true", then the SMS will _Not_ Allow Runs to Start
	; if it is Missing, i.e. "Not Connected"...!)
	; required = false
	required = true

	; Save Input Stream for This Data Source?
	; save_input_stream = false

[source "PVstreamer"]
	; The "Windows" Version for Slow Control/Meta-Data...
	; If the disabled key is present, the value doesn't matter
	disabled = true
	uri = 127.0.0.1:9000

	; Is this Data Source "Required" for Data Collection...?
	; (If set to "true", then the SMS will _Not_ Allow Runs to Start
	; if it is Missing, i.e. "Not Connected"...!)
	; required = false

	; Save Input Stream for This Data Source?
	; save_input_stream = false

[bankset "BSD"]
	; Note: For the purposes of simplifying the ADARA network protocol,
	; only the first *16* alphanumeric characters of the Bank Set Name
	; will be communicated along to the STC or other Live Clients...

	; List of Neutron Detector Banks to be Included in the Set
	banklist = [15, 16, 17, 18, 19, 20, 21, 22, 23, 24]

	; What is the desired output format for this Detector Bank Set...?
	; (If format is "event", then all other parameters are ignored.)
	; format = [event|histo|both]
	format = both

	; the TOF Offset for Histogramming (microseconds)
	; offset = 0

	; the Maximum TOF value for Histogramming (microseconds)
	max = 33333

	; the (Linear) TOF Bin Size for Histogramming (microseconds)
	; bin = 1

	; Optionally Also Save a "Rate-Throttled" Sampling of Events for Set,
	; in a toplevel sibling NXentry "/entry-<NAME>" (e.g. "/entry-BSD").
	;    throttle = 0:       implies "No Throttling"...
	;    throttle = d.ddd:   sample Pulses/Events at "d.ddd" Hz...
	throttle = 0.1

	; NeXus file NXentry suffix for any Throttled Event sets,
	; including distinct DASLogs Frequency/Time and Proton Charge, etc.
	; (*** 16 alphanumeric-only characters max, no spaces please! ***)
	suffix = bsd

[monitor 1]
	; Note: live beam monitor histogramming parameters are only updated
	; _between_ runs, for obvious reasons... ;-D

	; What is the desired output format for this Beam Monitor...?
	; NOTE: _ALL_ Beam Monitors must be the _Same_ Output Format...!
	; (If format is "event", then all other parameters are ignored.)
	; format = event
	format = histo

	; the "z" value for the monitor
	; from the beamline "geometry.xml" file
	distance = -6.71625

	; the TOF Offset for Histogramming (microseconds)
	; offset = 0

	; the Maximum TOF value for Histogramming (microseconds)
	max = 33333

	; the (Linear) TOF Bin Size for Histogramming (microseconds)
	; bin = 1

[storage]
	; The data pool base directory can be moved, but defaults to
	; the global $BASEDIR/data.
	;
	; basedir = /SNSlocal/sms/data

	; Explicit Max Blocks Allowed will take precedence over other
	; total storage size options (Poolsize and Percent)
	;
	; max_blocks_allowed = 1073741824

	; Poolsize will take precedence over Percentage
	;
	poolsize = 4G

	; If nothing else is specified, go with Percent of filesystem storage
	;
	percent = 50

	; filesize controls how large individual files can grow
	;
	filesize = 200M

	; syncdist indicates how often we'll insert a sync packet
	;
	syncdist = 16M

	; How often (seconds) shall we take a state snapshot for replay?
	;
	index_period = 300

	; ComBus Verbosity Level (for Run Pause/Resume)
	; combus_verbose = true

	; Storage Container Cleanup Timeout
	; (How Many Seconds Time Differential Before We
	;    Close Out A Stacked Container?)
	; container_cleanup_timeout = 1.0

[combus]
	; Combus Domain for Status Messages
	;
	domain = SNS.TEST

	; Combus Broker URI for Status Messages
	;
	broker_uri = tcp://workflowtest.sns.gov

	; Combus Broker User Name for Status Messages
	;
	broker_user = wfclient

	; Combus Broker Password for Status Messages
	;
	broker_pass = w0rkfl0w

[livestream]
	; What port should we listen on? Port number, or name from
	; /etc/service
	;
	; service = 31415

	; (Optional) IP Address/Network Interface to Listen for Connections
	; (Note: If left unset (or set to "ANY"), then the SMS will accept
	;    LiveClient connections on _Any_ network interface.)
	; uri = foo-sms.sns.gov (Note: Omit Port, specified in "service" option)
	; uri = ANY (accept LiveClient connections on _Any_ network interface)

	; How many seconds should we wait to retry if the Listener Setup fails?
	;
	; listen_retry = 5.0

	; Send Paused-Mode Data to Live Listener Client?
	;
	; send_paused_data = false

	; How many seconds should we wait for the initial Hello packet?
	;
	; hello_timeout = 30.0

	; Maximum data chunk to pass to sendfile() -- larger is more
	; efficient, but too large starves operations as we block in the
	; call.
	;
	; maxsend = 2M

[stcclient]
	; What address should we use to connect to the STC?
	;
	; uri = 127.0.0.1:31417

	; How many simultaneous connections to STC do we allow?
	; This should be sized relative to the number of machines in the
	; STC cluster, allowing for fairness between beam lines.
	;
	; max_connections = 3

	; How many seconds do we wait for our connection attempt to succeed?
	; We assume a fast, local network by default.
	;
	; connect_timeout = 15.0

	; After a failed connection attempt, how long do we wait to retry?
	;
	; formerly reconnect_timeout = 15.0
	; connect_retry = 15.0

	; If STC just goes away without sending a translation complete
	; packet, how long do we wait to retry?
	;
	; transient_timeout = 60.0

	; How many times do we try to re-queue a run to the STC
	; when it's experiencing repeated Transient Failures?
	;
	; max_requeue_count = 5

	; Send Paused-Mode Data to Include in STC Translation/NeXus File?
	; (All or Nothing for a given run, STCClient reads option once on init.)
	;
	; send_paused_data = false

	; How many seconds do we let the connection idle before we
	; send a heartbeat packet
	;
	; heartbeat = 5.0

	; Maximum data chunk to pass to sendfile() -- larger is more
	; efficient, but too large starves operations as we block in the
	; call.
	;
	; maxsend = 2M

[fastmeta "pulse magnet"]
	disabled = true

	; The contents of the device descriptor packet are slurped in from
	; the specified file. This must match the expected schema, and
	; the variable assignments below must be kept in sync with the
	; file as well.

	description = /path/to/description/file

	; ADARA variable id to meta pixel-id mapping definition
	;
	; adara_pv_id = type device-id [flags]
	;
	; Types (DDD is device-id):
	;
	;   Trigger (0x5DDDRRRR; ie, pixels 0x50010001)
	;      (RRRR = rising/falling, value saved in NeXus DAS Logs...)
	;
	;   ADC     (0x6DDDXXXX; ie, pixels 0x6001XXXX)
	;       (XXXX = analog value, saved in NeXus DAS Logs...)
	;
	; Common flags:
	;
	; persist - remember the last update and emit it at file/run change
	;       (useful for spin-flipper veto retention, etc)
	;
	; Trigger form:
	; adara_pv_id = Trigger DDD [Persist]
	; 
	; ADC form:
	; adara_pv_id = ADC DDD [Persist]
	;
	; Unused meta-data pixels will be marked as errors
	;
	; Examples:
	; 1 = ADC 1
	; 2 = Trigger 1
	; 3 = Trigger 2 persist

	1 = ADC 0             ; Value
	2 = trigger 0         ; Tsync IN
	3 = trigger 1         ; PM_Ready
	4 = trigger 1         ; PM_Ready
	5 = trigger 2         ; PM_Monitor
	6 = trigger 2         ; PM_Monitor
	7 = trigger 3 persist ; PM_Out
	8 = trigger 3 persist ; PM_Out

