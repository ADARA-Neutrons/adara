
ADARA PVSD Install Checklist

	- for a New or Upgraded DASSRV1 Host...

*** ADARA Git Repository ***

Please note that in the following installation instructions, it is
assumed the ADARA Git Repository has been checked out/cloned into:

   ~/gitsrc/ADARA

from the Git repository in:

   git+ssh://trac.sns.gov/var/repos/ADARA

i.e.:

   git clone git+ssh://trac.sns.gov/var/repos/ADARA ~/gitsrc/ADARA

If you place your clone of the ADARA Git Repository into a different
base directory in the filesystem, then you will need to update this
source directory location for any configuration files being copied
from the ADARA Git Repository.

*** Note: to ensure proper file permissions for captured system files,
please set your shell "umask" as follows before proceeding! ;-D

   umask 0002

# NOTE: If Verifying the State of an Existing Git Config Repository,
# Please Skip Step 1.a. and Proceed to Step 1.b. :-D

1.a. Create Initial PVSD Configuration on New Beamline/Host:

	# Make Top Level Home Controls Area...

	ls -ld /home/controls

	sudo mkdir /home/controls

	sudo chown controls /home/controls

	sudo chgrp slowcontrols_developers /home/controls

	sudo chmod g+ws /home/controls/

	ls -ld /home/controls

	# Create New Git Config Repo Branch, Copy/Steal from Existing Branch!

	ls -l /home/controls/config-dassrv1/

	git clone git+ssh://trac.sns.gov/var/repos/config \
		/home/controls/config-dassrv1/

	cd /home/controls/config-dassrv1/

	OLD="blXXX-dassrv1"   # "Old" or Existing Beamline Branch to Copy From

	NEW="blYYY-dassrv1"   # "New" Beamline Branch Being Created

	git checkout ${OLD}

	git branch ${NEW}

	git checkout ${NEW}

	git branch -d ${OLD}

	git branch -a | head

		* blYYY-dassrv1
		  master
		  remotes/origin/HEAD -> origin/master
		  . . .

	git rm -r deploy/ pvsd.deployment.history.txt

	git commit -m "Clearing Deployment History from Copied Branch" \
		deploy/ pvsd.deployment.history.txt

	git status

	git push origin ${NEW}

	RedHat6:
	vi .git/config
		- add section:
			[branch "YYY-dassrv1"]
				remote = origin
				merge = refs/heads/YYY-dassrv1
	
	RedHat7:
	git branch --set-upstream-to=origin/${NEW} ${NEW}

	git push

	git status

	# Populate New Branch with Schtuff...! ;-D

	### NOTE: If Just Copied Complete Setup from Existing Branch,
	### Then Edit PVSD Wrapper Script and Please Proceed to Step 1.b. :-D

	# Replace "--domain" name with New Beamline Short Name, "SNS.INST",
	# And Perhaps Edit "--broker_uri" to use "amqbrokerdev"... ;-D

	vi pvsd/usr.local.bin.pvsd

	### Else Proceed with Step 1.a to Create Brand New Config. :-D

	# Remove Any "brdo" (BranchDo) Script Inherited from "master" Branch...

	git rm brdo
	git commit -m "Remove BranchDo Script from Master Branch" brdo

	# Get/Copy/Create a "confck" Script...

	cp /SNS/users/$USER/confck.pvsd confck
	git add confck
	git commit -m "Install ConfCk Script." confck

	./confck

	mkdir pvsd

	# PVSD Init Script

	sudo cp ~/gitsrc/ADARA/PVStreamer/pvsd/pvsd.initscript /etc/init.d/pvsd

	ifconfig [Obtain Local Beamline IP/Subnet Address, i.e. 10.111.14.130]

	sudo vi /etc/init.d/pvsd
		- replace: EPICS_CA_ADDR_LIST="10.111.XXX.255 160.91.228.17"

	cp /etc/init.d/pvsd pvsd/pvsd.initscript

	# PVSD Wrapper Script

	sudo cp ~/gitsrc/ADARA/PVStreamer/pvsd/pvsd.wrapper /usr/local/bin/pvsd

	sudo vi /usr/local/bin/pvsd
		- replace "bl999" with beamline number
		- replace "XXX" with beamline short name

	cp /usr/local/bin/pvsd pvsd/usr.local.bin.pvsd

	# ADARA Mailer Config

	sudo cp /SNS/users/$USER/adaraMailer.conf \
		/etc/rsyslog.d/adaraMailer.conf

	cp /etc/rsyslog.d/adaraMailer.conf pvsd/adaraMailer.conf

	git add pvsd
	git commit pvsd

	./confck

-OR-

1.b. Verify State of Any Existing Git Config Repository:

	pushd /home/controls/config-dassrv1/ ; git pull ; git diff ; git status

	./confck

	sudo cp pvsd/usr.local.bin.pvsd /usr/local/bin/pvsd

	sudo cp pvsd/pvsd.initscript /etc/init.d/pvsd

	sudo cp pvsd/adaraMailer.conf /etc/rsyslog.d/adaraMailer.conf

	ls -l /usr/local/bin/pvsd /etc/init.d/pvsd \
		/etc/rsyslog.d/adaraMailer.conf   

		-rwxr-xr-x 1 root root 2146 Mar 31  2017 /etc/init.d/pvsd*

		-rw-r--r-- 1 root root  513 Mar 27  2017
			/etc/rsyslog.d/adaraMailer.conf

		-rwxr-xr-x 1 root root  549 May 31 18:35 /usr/local/bin/pvsd*

	./confck

	diff pvsd/rsyslog.conf /etc/rsyslog.conf

	sudo cp pvsd/rsyslog.conf /etc/rsyslog.conf

	./confck

	diff pvsd/etc.crontab /etc/crontab

	sudo cp pvsd/etc.crontab /etc/crontab

	./confck

2. RSyslog Setup:

	sudo vi /etc/rsyslog.conf

		#### RULES ####

		# pvsd log
		if $programname == 'pvsd' then /var/log/pvsd.log
		& ~

	ls -l /var/log/pvsd.log

	sudo touch /var/log/pvsd.log

	sudo chgrp users /var/log/pvsd.log

	sudo chmod g+w /var/log/pvsd.log

	ls -l /var/log/pvsd.log

	sudo /sbin/service rsyslog status

	sudo /sbin/service rsyslog restart

	sudo tail /var/log/messages

	./confck 

	cp /etc/rsyslog.conf pvsd/rsyslog.conf

	git add pvsd/rsyslog.conf
	git commit pvsd/rsyslog.conf

	./confck

	ls -l /etc/logrotate.d/pvsd_log

	sudo cp ~/gitsrc/ADARA/PVStreamer/pvsd/pvsd_log /etc/logrotate.d/

	ls -l /etc/logrotate.d/pvsd_log

	cp /etc/logrotate.d/pvsd_log ./pvsd/etc.logrotate.d.pvsd_log

	git add ./pvsd/etc.logrotate.d.pvsd_log
	git commit ./pvsd/etc.logrotate.d.pvsd_log

	./confck

3. RSyslog Pipes Setup (repeated here from ADARA/RSYSLOG.MAILER):

	ls -l /etc/rsyslog.pipes

	sudo mkdir /etc/rsyslog.pipes

	sudo mknod /etc/rsyslog.pipes/criticalMessages p

	sudo chgrp snswheel /etc/rsyslog.pipes/criticalMessages

	sudo chmod 660 /etc/rsyslog.pipes/criticalMessages

	cp ~/gitsrc/ADARA/big_err_pipe.c /tmp

	cc -o /tmp/big_err_pipe /tmp/big_err_pipe.c

	/tmp/big_err_pipe

	sudo cp ~/gitsrc/ADARA/rsyslogMailer /usr/local/bin

	sudo vi /etc/crontab

		# Don't try to send crontab output to "root@ornl.gov" which doesn't exist
		# MAILTO=root
		MAILTO="root@localhost"
		HOME=/

		*/10 * * * * root /usr/local/bin/rsyslogMailer > /dev/null 2>&1

	./confck

	cp /etc/crontab pvsd/etc.crontab

	git add pvsd/etc.crontab
	git commit pvsd/etc.crontab

	./confck

	ls -l /SNSlocal

	sudo mkdir /SNSlocal

	ls -l /SNSlocal/rsyslog.cache

	sudo mkdir /SNSlocal/rsyslog.cache

	sudo chown snsdata /SNSlocal/rsyslog.cache

	sudo chgrp adara /SNSlocal/rsyslog.cache

	sudo chmod g+ws /SNSlocal/rsyslog.cache

	ls -ld /SNSlocal/rsyslog.cache

		drwxrwsr-x 2 snsdata adara 168 Apr 26 13:28 /SNSlocal/rsyslog.cache

	ls -l /SNSlocal/rsyslog.cache

4. Administrator Crontab Setup:

	sudo cp ~/gitsrc/ADARA/PVStreamer/pvsd/pvsd_mon.sh \
		/usr/local/bin

	sudo cp ~/gitsrc/ADARA/PVStreamer/pvsd/beamline_xml_mon.sh \
		/usr/local/bin

	crontab -l

	crontab -e   # Edit "blXXX" to New Beamline Number...! :-D

		MAILTO=idac_adara_notify@email.ornl.gov
		PATH=/home/controls/epics/base/master/bin/linux-x86_64:/home/controls/epics/basev4/master/pvAccessCPP/bin/linux-x86_64/:/home/controls/epics/extensions/master/bin/linux-x86_64:/home/controls/epics/extensions/master/bin:/usr/local/SNS/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/sbin:/usr/sbin
		0-59/10 * * * * /SNS/users/$USER/stuff/exec/pvsd_mon.sh
		0 8,17 * * * /home/controls/config-dassrv1/confck --quiet
		0 8,17 * * * /home/controls/share/master/scripts/check_beamline_xml --quiet /home/controls/blXXX/beamline.xml
		MAILTO=idac_support@email.ornl.gov
		0 * * * * /usr/local/bin/beamline_xml_mon.sh --quiet

	crontab -l

5. Add PVSD to Local Run Levels

	chkconfig --list pvsd

	sudo chkconfig --add pvsd

	chkconfig --list pvsd

	sudo chkconfig pvsd on

	chkconfig --list pvsd

	./confck

	(rm pvsd/chkconfig.pvsd)

	chkconfig --list pvsd > pvsd/chkconfig.pvsd 2>&1

	git add pvsd/chkconfig.pvsd
	git commit pvsd/chkconfig.pvsd

	git diff ; git pull ; git push ; git status

	./confck

6. User Local Bin Soft Link Setup:

	ls -l /usr/sbin/pvsd

	sudo ln -s /home/controls/config-dassrv1/deploy/pvsd /usr/sbin/pvsd

	ls -l /usr/sbin/pvsd

7. Semi-Manually Deploy Local EPICS Libraries and Utilities...

	# Temporarily Edit $HOME/.bashrc EPICS Settings for the Build Process

	vi $HOME/.bashrc
	   - EPICS_BASE=/home/controls/epics/base/master
	   - EPICS_CA_AUTO_ADDR_LIST=NO
	   - EPICS_HOST_ARCH=linux-x86_64
	   - EPICS_CA_ADDR_LIST=127.255.255.255
	   - EPICS_CA_MAX_ARRAY_BYTES=100000000
	   - EPICS_EXTENSIONS=/home/controls/epics/extensions/master
	   - EPICS_BASEV4=/home/controls/epics/basev4/master
	   - EPICS4_DIR=/home/controls/epics/basev4/master

	mkdir /tmp/share

	git clone git+ssh://trac.sns.gov/var/repos/share /tmp/share/master

	/tmp/share/master/scripts/setup_controls.sh
	   - Note: Prompts for User Password for Sudo Commands...
	   - script can be re-executed repeatedly after fixing any errors... :-)

	rm -rf /tmp/share

	# Create Production EPICS Releases

	# EPICS Base

	# Determine Official EPICS Base Version
	# e.g. #define EPICS_VERSION_STRING "EPICS 3.14.12.6"
	grep EPICS_VERSION_STRING \
		/home/controls/epics/base/master/include/epicsVersion.h

	# Determine Latest Modification Date for EPICS Base
	# e.g. Date:   Mon Feb 12 11:34:21 2018 -0500
	#    -> YYYYMMDD = 20180212
	git log /home/controls/epics/base/master | head

	# Construct EPICS Base Release Name:
	# "rel" + EPICS_VERSION_STRING + "_" + YYYYMMDD
	#    -> "rel3.14.12.6_20180212"

	ls -l /home/controls/prod/epics/base

	mkdir -p /home/controls/prod/epics/base

	cp -rp /home/controls/epics/base/master \
		/home/controls/prod/epics/base/rel3.14.12.6_20180212

	# EPICS Extensions

	# Determine Official EPICS Extensions Version
	#    -> at the moment, it's "1.3", undocumented... ;-b

	# Determine Latest Modification Date for EPICS Extensions
	# e.g. Date:   Wed Aug 14 11:38:20 2019 -0400
	#    -> YYYYMMDD = 20190814
	git log /home/controls/epics/extensions/master | head

	# Construct EPICS Extensions Release Name:
	# "rel1.3" + "_" + YYYYMMDD
	#    -> "rel1.3_20190814"

	ls -l /home/controls/prod/epics/extensions

	mkdir -p /home/controls/prod/epics/extensions

	cp -rp /home/controls/epics/extensions/master \
		/home/controls/prod/epics/extensions/rel1.3_20190814

	# EPICS BaseV4

	# Determine Official EPICS BaseV4 Version
	# e.g. EPICS V4 Release 4.6.0 C++ Bundle Read-Me
	#    -> just use Major/Minor Release Numbers: "4.6"
	grep Release /home/controls/epics/basev4/master/README.md

	# Determine Latest Modification Date for EPICS BaseV4
	# e.g. Date:   Thu Nov 15 11:07:42 2018 -0500
	#    -> YYYYMMDD = 20181115
	git log /home/controls/epics/basev4/master | head

	# Construct EPICS BaseV4 Release Name:
	# "rel" + EPICS_V4_Release + "_" + YYYYMMDD
	#    -> "rel4.6_20181115"

	ls -l /home/controls/prod/epics/basev4

	mkdir -p /home/controls/prod/epics/basev4

	cp -rp /home/controls/epics/basev4/master \
		/home/controls/prod/epics/basev4/rel4.6_20181115

8. ADARA Production EPICS Soft Links Setup (if not already done for SMS):

	ls -l /home/controls/prod/ADARA

	mkdir /home/controls/prod/ADARA

	ls -l /home/controls/prod/ADARA

	(rm /home/controls/prod/ADARA/EpicsBaseLink)

	ln -s /home/controls/prod/epics/base/rel3.14.12.6_20180212 \
		/home/controls/prod/ADARA/EpicsBaseLink

	(rm /home/controls/prod/ADARA/EpicsBaseV4Link)

	ln -s /home/controls/prod/epics/basev4/rel4.6_20181115 \
		/home/controls/prod/ADARA/EpicsBaseV4Link

	(rm /home/controls/prod/ADARA/EpicsExtensionsLink)

	ln -s /home/controls/prod/epics/extensions/rel1.3_20190814 \
		/home/controls/prod/ADARA/EpicsExtensionsLink

	ls -l /home/controls/prod/ADARA

	# Note: See Below for Jeeem's Production ADARA EPICS Setup
	# in "$HOME/.bashrc"... ;-D

	# Generally, Set the basic EPICS Environment to:

	vi $HOME/.bashrc
	   - EPICS_BASE=/home/controls/prod/ADARA/EpicsBaseLink
	   - EPICS_EXTENSIONS=/home/controls/prod/ADARA/EpicsExtensionsLink
	   - EPICS_CA_AUTO_ADDR_LIST=NO
	   - EPICS_HOST_ARCH=linux-x86_64
	   - EPICS_CA_ADDR_LIST=127.255.255.255
	   - EPICS_BASEV4=/home/controls/prod/ADARA/EpicsBaseV4Link
	   - EPICS4_DIR=/home/controls/prod/ADARA/EpicsBaseV4Link
	   - EPICS_CA_MAX_ARRAY_BYTES=100000000

	source $HOME/.bashrc

	printenv | grep EPICS

9. Make Sure Accelerator Timing Git Repo is Deployed:

	ls -l /home/controls/Accelerator/

	cd /home/controls

	git clone git+ssh://trac.sns.gov/var/repos/Accelerator

	ls -l /home/controls/Accelerator/

		total 388
		-rw-rw-r-- 1 USER slowcontrols_developers  18277 Mar 31  2016
			snsTiming.h
		-rw-rw-r-- 1 USER slowcontrols_developers 373279 Mar 31  2016
			SNS.Timing.Master.Functional.System.Description.pdf

10. Deploy PVSD Daemon:

	pushd ~/gitsrc/ADARA ; git pull ; git diff ; git status

	(ls -l /home/controls/config-dassrv1/deploy/pvsd)

		lrwxrwxrwx 1 USER slowcontrols_developers 47 Jul 18 13:28
			/home/controls/config-dassrv1/deploy/pvsd ->
				/home/controls/prod/ADARA/20170717/v1.6.19/pvsd*

	./deploy_adara pvsd

11. Start PVSD Daemon:

	sudo /sbin/service pvsd status

	sudo /sbin/service pvsd start

	pvsdlog

DONE!!! :-D

   Jeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeem :)

ADDENDUMS:

A. Jeeem's Production ADARA EPICS Setup in $HOME/.bashrc:

	export EPICS_BASE="/home/controls/prod/ADARA/EpicsBaseLink"
	export EPICS_BASEV4="/home/controls/prod/ADARA/EpicsBaseV4Link"
	export EPICS_EXTENSIONS="/home/controls/prod/ADARA/EpicsExtensionsLink"
	export EPICS_CA_AUTO_ADDR_LIST="NO"
	export EPICS_CA_MAX_ARRAY_BYTES="100000000"

	if [[ -x "${EPICS_BASE}"/startup/EpicsHostArch.pl ]]; then
   		export EPICS_HOST_ARCH=`"${EPICS_BASE}"/startup/EpicsHostArch.pl`
	else
   		export EPICS_HOST_ARCH="none"
	fi

	if [[ -z $EPICS_CA_ADDR_LIST ]]; then
   		#export EPICS_CA_ADDR_LIST="localhost"
   		# support multiple local iocs on a host...! ;-D
   		export EPICS_CA_ADDR_LIST="127.255.255.255"
	fi

	# From EPICS V4 setup_profile.sh...

	export EPICS4_DIR="$EPICS_BASEV4"

	# From EPICS Extensions setup_profile.sh...

	export EDMOBJECTS="${EPICS_EXTENSIONS}/pref/edm"
	export EDMPVOBJECTS="${EPICS_EXTENSIONS}/pref/edm"
	export EDMFILES="${EPICS_EXTENSIONS}/pref/edm"
	export EDMHELPFILES="${EPICS_EXTENSIONS}/src/edm/helpFiles"
	export EDMLIBS="${EPICS_EXTENSIONS}/lib/$EPICS_HOST_ARCH"
	export EDMLIB_SUFFIX="so"
	export EDMACTIONS="${EPICS_EXTENSIONS}/pref/edm"

	# Executable Path Stuff...

	epicspath="/home/controls/bin"
	epicspath="$epicspath:${EPICS_BASE}/bin/${EPICS_HOST_ARCH}"
	epicspath="$epicspath:${EPICS_BASEV4}/pvAccessCPP/bin/linux-x86_64/"
	epicspath="$epicspath:${EPICS_EXTENSIONS}/bin/${EPICS_HOST_ARCH}"
	epicspath="$epicspath:${EPICS_EXTENSIONS}/bin"

	### NOTE: Customize to Your Path Setup...!
	export PATH="...:$epicspath:..."

	# Additional EPICS Python Cruft...
	export PYTHONPATH="${PYTHONPATH}:/home/controls/share/master/python"
	export PYTHONPATH="${PYTHONPATH}:${EPICS_BASEV4}/pvaPy/lib/python/2.7/linux-x86_64"
	export PYTHONPATH="${PYTHONPATH}:${EPICS_EXTENSIONS}/src/cothread"
	export PYTHONPATH="${PYTHONPATH}:${EPICS_EXTENSIONS}/src/pcaspy"
	export PYTHONPATH="${PYTHONPATH}:${EPICS_EXTENSIONS}/src/pcaspy/build/lib.linux-x86_64-2.6/pcaspy/"
	export PYTHONPATH="${PYTHONPATH}:${EPICS_EXTENSIONS}/src/pyepics/build/lib"
	export PYTHONPATH="${PYTHONPATH}:/home/controls/python"

